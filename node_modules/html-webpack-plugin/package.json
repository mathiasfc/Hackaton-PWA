{
  "_args": [
    [
      "html-webpack-plugin@4.0.0-beta.5",
      "/home/mathias/Documents/4all/hackaton/Hackaton-PWA/node_modules/react-scripts"
    ]
  ],
  "_from": "html-webpack-plugin@4.0.0-beta.5",
  "_hasShrinkwrap": false,
  "_id": "html-webpack-plugin@4.0.0-beta.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/html-webpack-plugin",
  "_nodeVersion": "6.11.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/html-webpack-plugin_4.0.0-beta.5_1544692508197_0.712883521504061"
  },
  "_npmUser": {
    "email": "j.nicklas@me.com",
    "name": "jantimon"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "name": "html-webpack-plugin",
    "raw": "html-webpack-plugin@4.0.0-beta.5",
    "rawSpec": "4.0.0-beta.5",
    "scope": null,
    "spec": "4.0.0-beta.5",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-4.0.0-beta.5.tgz",
  "_shasum": "2c53083c1151bfec20479b1f8aaf0039e77b5513",
  "_shrinkwrap": null,
  "_spec": "html-webpack-plugin@4.0.0-beta.5",
  "_where": "/home/mathias/Documents/4all/hackaton/Hackaton-PWA/node_modules/react-scripts",
  "author": {
    "email": "j.nicklas@me.com",
    "name": "Jan Nicklas",
    "url": "https://github.com/jantimon"
  },
  "bugs": {
    "url": "https://github.com/jantimon/html-webpack-plugin/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "html-minifier": "^3.5.20",
    "loader-utils": "^1.1.0",
    "lodash": "^4.17.11",
    "pretty-error": "^2.1.1",
    "tapable": "^1.1.0",
    "util.promisify": "1.0.0"
  },
  "description": "Simplifies creation of HTML files to serve your webpack bundles",
  "devDependencies": {
    "@types/loader-utils": "1.1.3",
    "@types/node": "10.11.4",
    "@types/tapable": "1.0.4",
    "appcache-webpack-plugin": "^1.4.0",
    "commitizen": "3.0.2",
    "css-loader": "^1.0.0",
    "cz-conventional-changelog": "2.1.0",
    "dir-compare": "1.4.0",
    "file-loader": "^2.0.0",
    "html-loader": "^0.5.5",
    "jest": "23.6.0",
    "mini-css-extract-plugin": "^0.4.3",
    "pug": "2.0.3",
    "pug-loader": "2.4.0",
    "rimraf": "^2.6.2",
    "semistandard": "12.0.1",
    "standard-version": "^4.4.0",
    "style-loader": "^0.23.0",
    "typescript": "^2.9.2",
    "webpack": "^4.20.2",
    "webpack-recompilation-simulator": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "fileCount": 13,
    "integrity": "sha512-y5l4lGxOW3pz3xBTFdfB9rnnrWRPVxlAhX6nrBYIcW+2k2zC3mSp/3DxlWVCMBfnO6UAnoF8OcFn0IMy6kaKAQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEiMdCRA9TVsSAnZWagAAA40P/jSfyQTNL2y85sZUiNae\nRTlY4mxFeavNFIG1LKF+zB0Z3nR4PgeoNn0dWKaA+G/eRAGaOB+5xCPGkDfi\nuEaRuFVTq4+oPoZ8Uu+Pz+tyKq5d50xzjonigZTcIsgUubpzoqA0dHp85RK7\nPxPL10z860751E+U/LUy21P+agRuVJeBtWWzViwmvIJ98gNAA4TkxH2pHJUN\nFubxuTKL4vYvk15FBZhDKe6QywTI7dGT8FKd3kddRISV+lFUubBr9LUvZAFC\n5CW6o5/22nQ+TEWhj0BOG/NMz9CcWaQNgpDgzaDAAIB7md3OB5wLgrdhnPwz\nvaYpASdtIP72jH1q6YqsqzAq3EQVtQNsoU3OPbKSwRuz4F0RiBQiwyW7liKC\ndedP8S4bmuQXyh3Qw/cGsrBN4Hs3cVGo7wLzRODB/nWhkWlzLeQdYyPQBr3l\nCKW51F9Habds8NBvoZWk1DhybYWYLGWLaLdnX/jUK//Q6KZWf1uKtiTGq1td\n5JIM6r7BvFg91ARtthL7fwcnd2qjgp+YSIoLxwFQL6UoE6qA16fnxQJ44qvf\nNvUKwJ5mlvoxAPE/X1FWI5QtQIMmOmSmcEiMMDEOET0rIUVXU16HCl1bgBtY\nOhsOxLanCKvNKYNfHl1MK1S4GgqrHrHyFqPfw83/EBQ6fR4KUE9MjEe1A8HQ\nYjaf\r\n=fOEh\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "2c53083c1151bfec20479b1f8aaf0039e77b5513",
    "tarball": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-4.0.0-beta.5.tgz",
    "unpackedSize": 103654
  },
  "engines": {
    "node": ">=6.9"
  },
  "gitHead": "298635f4b3fb19fe920b1e0b982b61af0f31239d",
  "homepage": "https://github.com/jantimon/html-webpack-plugin",
  "jest": {
    "testEnvironment": "node",
    "watchPathIgnorePatterns": [
      "<rootDir>/dist"
    ]
  },
  "keywords": [
    "html",
    "html-webpack-plugin",
    "plugin",
    "webpack"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ampedandwired",
      "email": "charles.blaxland@gmail.com"
    },
    {
      "name": "jantimon",
      "email": "j.nicklas@me.com"
    },
    {
      "name": "mastilver",
      "email": "th.sileghem@gmail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "html-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.0.0"
  },
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n![npm](https://img.shields.io/npm/dw/html-webpack-plugin.svg)\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![Backers on Open Collective](https://opencollective.com/html-webpack-plugin/backers/badge.svg)](#backers)\n [![Sponsors on Open Collective](https://opencollective.com/html-webpack-plugin/sponsors/badge.svg)](#sponsors) \n\n<div align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://worldvectorlogo.com/logos/html5.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <div>\n    <img width=\"100\" height=\"100\" title=\"Webpack Plugin\" src=\"http://michael-ciniawsky.github.io/postcss-load-plugins/logo.svg\">\n  </div>\n  <h1>HTML Webpack Plugin</h1>\n  <p>Plugin that simplifies creation of HTML files to serve your bundles</p>\n</div>\n\n<h2 align=\"center\">Install Beta</h2>\n\n```bash\n  npm i --save-dev html-webpack-plugin@next\n```\n\n```bash\n  yarn add --dev html-webpack-plugin@next\n```\n\n<h2 align=\"center\">Install Stable</h2>\n\n```bash\n  npm i --save-dev html-webpack-plugin\n```\n\n```bash\n  yarn add --dev html-webpack-plugin\n```\n\n\nThis is a [webpack](http://webpack.js.org/) plugin that simplifies creation of HTML files to serve your `webpack` bundles. This is especially useful for `webpack` bundles that include a hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply\nyour own template using `lodash` templates or use your own loader.\n\n<h2 align=\"center\">Sponsors</h2>\n\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/9/avatar.svg\"></a>\n\nThanks for supporting the ongoing improvements to the html-webpack-plugin!  \n\n<h2 align=\"center\">Zero Config</h2>\n\nThe `html-webpack-plugin` works without configuration.  \nIt's a great addition to the [⚙️ webpack-config-plugins](https://github.com/namics/webpack-config-plugins/blob/master/README.md#zero-config-webpack-dev-server-example).\n\n<h2 align=\"center\">Plugins</h2>\n\nThe `html-webpack-plugin` provides [hooks](https://github.com/jantimon/html-webpack-plugin#events) to extend it to your needs. There are already some really powerful plugins which can be integrated with zero configuration\n\n * [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity) for enhanced asset security\n * [appcache-webpack-plugin](https://github.com/lettertwo/appcache-webpack-plugin) for iOS and Android offline usage\n * [favicons-webpack-plugin](https://github.com/jantimon/favicons-webpack-plugin) which generates favicons and icons for iOS, Android and desktop browsers\n * [html-webpack-harddisk-plugin](https://github.com/jantimon/html-webpack-harddisk-plugin) can be used to always write to disk the html file, useful when webpack-dev-server / HMR are being used\n * [html-webpack-inline-source-plugin](https://github.com/DustinJackson/html-webpack-inline-source-plugin) to inline your assets in the resulting HTML file\n * [html-webpack-inline-svg-plugin](https://github.com/thegc/html-webpack-inline-svg-plugin) to inline SVGs in the resulting HTML file.\n * [html-webpack-exclude-assets-plugin](https://github.com/jamesjieye/html-webpack-exclude-assets-plugin) for excluding assets using regular expressions\n * [html-webpack-include-assets-plugin](https://github.com/jharris4/html-webpack-include-assets-plugin) for including lists of js or css file paths (such as those copied by the copy-webpack-plugin).\n * [script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin) to add `async`, `defer` or `module` attributes to your `<script>` elements, or even inline them\n * [style-ext-html-webpack-plugin](https://github.com/numical/style-ext-html-webpack-plugin) to convert your `<link>`s to external stylesheets into `<style>` elements containing internal CSS\n * [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin) to add resource hints for faster initial page loads using `<link rel='preload'>` and `<link rel='prefetch'>`\n * [preload-webpack-plugin](https://github.com/GoogleChrome/preload-webpack-plugin) for automatically wiring up asynchronous (and other types) of JavaScript chunks using `<link rel='preload'>` helping with lazy-loading\n * [link-media-html-webpack-plugin](https://github.com/yaycmyk/link-media-html-webpack-plugin) allows for injected stylesheet `<link />` tags to have their media attribute set automatically; useful for providing specific desktop/mobile/print etc. stylesheets that the browser will conditionally download\n * [inline-chunk-manifest-html-webpack-plugin](https://github.com/jouni-kantola/inline-chunk-manifest-html-webpack-plugin) for inlining webpack's chunk manifest. Default extracts manifest and inlines in `<head>`\n * [html-webpack-inline-style-plugin](https://github.com/djaax/html-webpack-inline-style-plugin) for inlining styles to HTML elements using [juice](https://github.com/Automattic/juice). Useful for email generation automatisation.\n * [html-webpack-exclude-empty-assets-plugin](https://github.com/KnisterPeter/html-webpack-exclude-empty-assets-plugin) removes empty assets from being added to the html. This fixes some problems with extract-text-plugin with webpack 4.\n * [webpack-concat-plugin](https://github.com/hxlniada/webpack-concat-plugin) for concat and uglify files that needn't to be webpack bundles(for legacy files) and inject to html-webpack-plugin.\n * [html-webpack-link-type-plugin](https://github.com/steadyapp/html-webpack-link-type-plugin) adds a configurable mimetype to resources injected as links (such as adding type=\"text/css\" to external stylesheets) for compatibility with \"strict mode\". \n \n * [csp-html-webpack-plugin](https://github.com/slackhq/csp-html-webpack-plugin) to add [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) meta tags to the HTML output\n\n\n<h2 align=\"center\">Usage</h2>\n\nThe plugin will generate an HTML5 file for you that includes all your `webpack`\nbundles in the body using `script` tags. Just add the plugin to your `webpack`\nconfig as follows:\n\n**webpack.config.js**\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin()\n  ]\n}\n```\n\nThis will generate a file `dist/index.html` containing the following\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple `webpack` entry points, they will all be included with `script` tags in the generated HTML.\n\nIf you have any CSS assets in webpack's output (for example, CSS extracted with the [ExtractTextPlugin](https://github.com/webpack/extract-text-webpack-plugin))\nthen these will be included with `<link>` tags in the HTML head.\n\nIf you have plugins that make use of it, `html-webpack-plugin` should be ordered first before any of the integrated plugins.\n\n<h2 align=\"center\">Options</h2>\n\nYou can pass a hash of configuration options to `html-webpack-plugin`.\nAllowed values are as follows\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**[`title`](#)**|`{String}`|`Webpack App`|The title to use for the generated HTML document|\n|**[`filename`](#)**|`{String}`|`'index.html'`|The file to write the HTML to. Defaults to `index.html`. You can specify a subdirectory here too (eg: `assets/admin.html`)|\n|**[`template`](#)**|`{String}`|``|`webpack` require path to the template. Please see the [docs](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md) for details|\n|**[`templateParameters`](#)**|`{Boolean\\|Object\\|Function}`|``| Allows to overwrite the parameters used in the template |\n|**[`inject`](#)**|`{Boolean\\|String}`|`true`|`true \\|\\| 'head' \\|\\| 'body' \\|\\| false` Inject all assets into the given `template` or `templateContent`. When passing `true` or `'body'` all javascript resources will be placed at the bottom of the body element. `'head'` will place the scripts in the head element|\n|**[`favicon`](#)**|`{String}`|``|Adds the given favicon path to the output HTML|\n|**[`meta`](#)**|`{Object}`|`{}`|Allows to inject `meta`-tags. E.g. `meta: {viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'}`|\n|**[`minify`](#)**|`{Boolean\\|Object}`|`true` if `mode` is `'production'`, otherwise `false`|Controls if and in what ways the output should be minified. See [minification](#minification) below for more details.|\n|**[`hash`](#)**|`{Boolean}`|`false`|If `true` then append a unique `webpack` compilation hash to all included scripts and CSS files. This is useful for cache busting|\n|**[`cache`](#)**|`{Boolean}`|`true`|Emit the file only if it was changed|\n|**[`showErrors`](#)**|`{Boolean}`|`true`|Errors details will be written into the HTML page|\n|**[`chunks`](#)**|`{?}`|`?`|Allows you to add only some chunks (e.g only the unit-test chunk)|\n|**[`chunksSortMode`](#plugins)**|`{String\\|Function}`|`auto`|Allows to control how chunks should be sorted before they are included to the HTML. Allowed values are `'none' \\| 'auto' \\| 'dependency' \\| 'manual' \\| {Function}`|\n|**[`excludeChunks`](#)**|`{Array.<string>}`|``|Allows you to skip some chunks (e.g don't add the unit-test chunk)|\n|**[`xhtml`](#)**|`{Boolean}`|`false`|If `true` render the `link` tags as self-closing (XHTML compliant)|\n\nHere's an example webpack config illustrating how to use these options\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename: 'assets/admin.html'\n    })\n  ]\n}\n```\n\n### Generating Multiple HTML Files\n\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\n### Writing Your Own Templates\n\nIf the default generated HTML doesn't meet your needs you can supply\nyour own template. The easiest way is to use the `template` option and pass a custom HTML file.\nThe html-webpack-plugin will automatically inject all necessary CSS, JS, manifest\nand favicon files into the markup.\n\nDetails of other template loaders are [documented here](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md).\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template',\n    // Load a custom template (lodash by default)\n    template: 'index.html'\n  })\n]\n```\n\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\nIf you already have a template loader, you can use it to parse the template.\nPlease note that this will also happen if you specify the html-loader and use `.html` file as template.\n\n**webpack.config.js**\n```js\nmodule: {\n  loaders: [\n    { test: /\\.hbs$/, loader: \"handlebars-loader\" }\n  ]\n},\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template using Handlebars',\n    template: 'index.hbs'\n  })\n]\n```\n\nYou can use the `lodash` syntax out of the box. If the `inject` feature doesn't fit your needs and you want full control over the asset placement use the [default template](https://github.com/jaketrent/html-webpack-template/blob/86f285d5c790a6c15263f5cc50fd666d51f974fd/index.html) of the [html-webpack-template project](https://github.com/jaketrent/html-webpack-template) as a starting point for writing your own.\n\nThe following variables are available in the template:\n- `htmlWebpackPlugin`: data specific to this plugin\n  - `htmlWebpackPlugin.files`: a massaged representation of the\n    `assetsByChunkName` attribute of webpack's [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n    object. It contains a mapping from entry point name to the bundle filename, eg:\n    ```json\n    \"htmlWebpackPlugin\": {\n      \"files\": {\n        \"css\": [ \"main.css\" ],\n        \"js\": [ \"assets/head_bundle.js\", \"assets/main_bundle.js\"],\n        \"chunks\": {\n          \"head\": {\n            \"entry\": \"assets/head_bundle.js\",\n            \"css\": [ \"main.css\" ]\n          },\n          \"main\": {\n            \"entry\": \"assets/main_bundle.js\",\n            \"css\": []\n          },\n        }\n      }\n    }\n    ```\n    If you've set a publicPath in your webpack config this will be reflected\n    correctly in this assets hash.\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n- `webpack`: the webpack [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n  object. Note that this is the stats object as it was at the time the HTML template\n  was emitted and as such may not have the full set of stats that are available\n  after the webpack run is complete.\n\n- `webpackConfig`: the webpack configuration that was used for this compilation. This\n  can be used, for example, to get the `publicPath` (`webpackConfig.output.publicPath`).\n\n- `compilation`: the webpack [compilation](https://webpack.js.org/api/compilation/) object.\n  This can be used, for example, to get the contents of processed assets and inline them\n  directly in the page, through `compilation.assets[...].source()`\n  (see [the inline template example](examples/inline/template.pug)).\n\n\n### Filtering Chunks\n\nTo include only certain chunks you can limit the chunks being used\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    chunks: ['app']\n  })\n]\n```\n\nIt is also possible to exclude certain chunks by setting the `excludeChunks` option\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    excludeChunks: [ 'dev-helper' ]\n  })\n]\n```\n\n### Minification\n\nIf the `minify` option is set to `true` (the default when webpack's `mode` is `'production'`),\nthe generated HTML will be minified using [html-minifier](https://github.com/kangax/html-minifier)\nand the following options:\n\n```js\n{\n  collapseWhitespace: true,\n  removeComments: true,\n  removeRedundantAttributes: true,\n  removeScriptTypeAttributes: true,\n  removeStyleLinkTypeAttributes: true,\n  useShortDoctype: true\n}\n```\n\nTo use custom [html-minifier options](https://github.com/kangax/html-minifier#options-quick-reference)\npass an object to `minify` instead. This object will not be merged with the defaults above.\n\nTo disable minifcation during production mode set the `minify` option to `false`.\n\n### Meta Tags\n\nIf the `meta` option is set the html-webpack-plugin will inject meta tags.  \nFor the default template the html-webpack-plugin will already provide a default for the `viewport` meta tag.\n\nPlease take a look at this well maintained list of almost all [possible meta tags](https://github.com/joshbuchea/HEAD#meta).\n\n#### name/content meta tags \n\nMost meta tags are configured by setting a `name` and a `content` attribute.  \nTo add those use a key/value pair:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n      'meta': {\n        'viewport': 'width=device-width, initial-scale=1, shrink-to-fit=no',\n        // Will generate: <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        'theme-color': '#4285f4'\n        // Will generate: <meta name=\"theme-color\" content=\"#4285f4\">\n      }\n  })\n]\n```\n\n#### Simulate http response headers\n\nThe **http-equiv** attribute is essentially used to simulate a HTTP response header.  \nThis format is supported using an object notation which allows you to add any attribute:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    'meta': {\n      'Content-Security-Policy': { 'http-equiv': 'Content-Security-Policy', 'content': 'default-src https:' },\n      // Will generate: <meta http-equiv=\"Content-Security-Policy\" content=\"default-src https:\">\n      // Which equals to the following http header: `Content-Security-Policy: default-src https:`\n      'set-cookie': { 'http-equiv': 'set-cookie', content: 'name=value; expires=date; path=url' },\n      // Will generate: <meta http-equiv=\"set-cookie\" content=\"value; expires=date; path=url\">\n      // Which equals to the following http header: `set-cookie: value; expires=date; path=url`\n    }\n  })\n]\n```\n\n### Long Term Caching\n\nFor long term caching add `contenthash/templatehash` to the filename.\n\n**Example:**\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    filename: 'index.[contenthash].html'\n  })\n]\n```\n\n`contenthash/templatehash` is the hash of the content of the output file.\n\nOptionally, You can configure like `[<hashType>:contenthash:<digestType>:<length>]`\n\n* `hashType` - one of `sha1`, `md5`, `sha256`, `sha512`  or any other node.js supported hash type\n* `digestType` - one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n* `maxlength` - maximum length of the generated hash in chars\n\n**Defaults:** `[md5:contenthash:hex:9999]`\n\n### Events\n\nTo allow other [plugins](https://github.com/webpack/docs/wiki/plugins) to alter the HTML this plugin executes\n[tapable](https://github.com/webpack/tapable/tree/master) hooks.\n\nThe [lib/hooks.js](https://github.com/jantimon/html-webpack-plugin/blob/master/lib/hooks.js) contains all information\nabout which values are passed.\n\n[![Concept flow uml](https://raw.githubusercontent.com/jantimon/html-webpack-plugin/master/flow.png)](https://github.com/jantimon/html-webpack-plugin/blob/master/flow.puml)\n\n#### `beforeAssetTagGeneration` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<{string}>,\n        css: Array<{string}>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTags` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTagGroups` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `afterTemplateExecution` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `beforeEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `afterEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\nExample implementation: [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity)\n\n**plugin.js**\n```js\n// If your plugin is direct dependent to the html webpack plugin:\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n// If your plugin is using html-webpack-plugin as an optional dependency\n// you can use https://github.com/tallesl/node-safe-require instead:\nconst HtmlWebpackPlugin = require('safe-require')('html-webpack-plugin');\n\nclass MyPlugin {\n  apply (compiler) {\n    compiler.hooks.compilation.tap('MyPlugin', (compilation) => {\n      console.log('The compiler is starting a new compilation...')\n\n      // Staic Plugin interface |compilation |HOOK NAME | register listener \n      HtmlWebpackPlugin.getHooks(compilation).beforeEmit.tapAsync(\n        'MyPlugin', // <-- Set a meaningful name here for stacktraces\n        (data, cb) => {\n          // Manipulate the content\n          data.html += 'The Magic Footer'\n          // Tell webpack to move on\n          cb(null, data)\n        }\n      )\n    })\n  }\n}\n\nmodule.exports = MyPlugin\n```\n\n**webpack.config.js**\n```js\nplugins: [\n  new MyPlugin({ options: '' })\n]\n```\n\nNote that the callback must be passed the HtmlWebpackPluginData in order to pass this onto any other plugins listening on the same `beforeEmit` event\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/4113649?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/jantimon\">Jan Nicklas</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/4112409?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/mastilver\">Thomas Sileghem</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n## Backers\n\nThank you to all our backers!  \nIf you want to support the project as well [become a sponsor](https://opencollective.com/html-webpack-plugin#sponsor) or a [a backer](https://opencollective.com/html-webpack-plugin#backer).\n\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/0/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/1/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/2/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/3/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/5/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/6/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/7/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/9/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/9/avatar.svg?requireActive=false\"></a>\n\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\nYou're free to contribute to this project by submitting [issues](https://github.com/jantimon/html-webpack-plugin/issues) and/or [pull requests](https://github.com/jantimon/html-webpack-plugin/pulls). This project is test-driven, so keep in mind that every change and new feature should be covered by tests.\n\nThis project uses the [semistandard code style](https://github.com/Flet/semistandard).\n\n<a href=\"https://github.com/jantimon/html-webpack-plugin/graphs/contributors\"><img src=\"https://opencollective.com/html-webpack-plugin/contributors.svg?width=890&button=false\" /></a>\n\n\n[npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/html-webpack-plugin\n\n[node]: https://img.shields.io/node/v/html-webpack-plugin.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/jantimon/html-webpack-plugin.svg\n[deps-url]: https://david-dm.org/jantimon/html-webpack-plugin\n\n[tests]: http://img.shields.io/travis/jantimon/html-webpack-plugin.svg\n[tests-url]: https://travis-ci.org/jantimon/html-webpack-plugin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jantimon/html-webpack-plugin.git"
  },
  "scripts": {
    "build-examples": "node examples/build-examples.js",
    "commit": "git-cz",
    "posttest": "tsc",
    "pretest": "semistandard",
    "puml": "npx puml generate flow.puml -o flow.png",
    "release": "standard-version",
    "test": "jest --runInBand --verbose --coverage",
    "test-watch": "jest --runInBand --watch"
  },
  "semistandard": {
    "ignore": [
      "examples/*/dist/**/*.*"
    ]
  },
  "version": "4.0.0-beta.5"
}
